======================
Низкоуровневые функции
======================

Функции общего назначения
=========================

**IC_reg(host: c_char_p, port: c_char_p, arm: c_char, username: c_char_p, password: c_char_p, answer: POINTER(c_char_p), answer_size: c_int) -> c_int**

    Регистрация клиента на сервере.

    * **host** - адрес сервера в числовом виде (например 192.168.5.140).
    * **port** - рабочий порт сервера (6666).
    * **arm** - тип клиента.
    * **username** - имя пользователя, зарегистрированного на сервере.
    * **password** - пароль пользователя.
    * **answer** - выходной буфер для возвращаемых данных.
    * **answer_size** - размер выходного буфера в байтах.

**IC_unreg(username: c_char_p) -> c_int**

    Раз-регистрация клиента на сервере (сигнал об окончании работы).

    * **username** - имя пользователя, использованное при регистрации на сервере.

**IC_set_client_time_live(interval: c_int) -> c_int**

    Установка интервала подтверждения.

    * **interval** - интервал в минутах.

**IC_set_show_waiting(interval: c_int) -> c_int**

    Установка времени появления заставки ожидания.

    * **interval** - интервал в секундах.

**IC_set_webserver(option: c_int) -> c_int**

    Установка режима работы через Web-шлюз.

    * **option** - включение (1) или выключение (0) режима работы через Web-шлюз.

**IC_set_webcgi(cgi: c_char_p) -> c_int**

    Установка имени шлюза при работе через Web-шлюз.

    * **cgi** - имя шлюза (по умолчанию - /cgi-bin/wwwirbis.exe).

**IC_set_blocksocket(opt: c_int) -> c_int**

    Установка режима ожидания ответа от сервера.

    * **opt** - включение (1) или выключение (0) режима блокирующего ожидания ответа от сервера. По умолчанию блокирующий режим выключен.

**IC_isbusy() -> c_int**

    Определение завершения очередного обращения к серверу.

    Код возврата: 1 - выполняется запрос к серверу, 0 - обращение к серверу завершено.

Функции для работы с ресурсами
==============================

**IC_update_ini(ini_file: c_char_p) -> c_int**

    Обновление INI-файла – профиля пользователя на сервере.

    * **ini_file** - набор измененных строк в виде структуры INI-файла (в ANSI-кодировке).

**IC_getresourse**

    Чтение текстового ресурса (файла).

**IC_clearresourse**

    Очистка памяти кэша.

    В результате выполнения функции очищается кэш, в котором сохраняются запрошенные текстовые ресурсы (после чего при их запросе они берутся с сервера). При выполнении функции не производится обращение на сервер.

**IC_getresoursegroup**

    Групповое чтение текстовых ресурсов.

**IC_getbinaryresourse**

    Чтение двоичного ресурса.

**IC_putresourse**

    Запись текстового ресурса на сервер.

Функции для работы с мастер-файлом базы данных
==============================================

**IC_read**

    Чтение записи.

**IC_readformat**

    Чтение записи с расформатированием.

**IC_update**

    Сохранение/обновление записи в базе данных.

**IC_updategroup**

    Групповое сохранение/обновление записей в базе данных.

**IC_runlock**

    Разблокирование записи на сервере.

**IC_ifupdate**

    Актуализация записи.

**IC_maxmfn**

    Получение максимального MFN базы данных.

Функции для работы с записью
============================

**IC_fieldn**

    Определение порядкового номера поля в записи.

**IC_field**

    Чтение заданного поля/подполя.

**IC_fldadd**

    Добавление поля в запись.

**IC_fldrep**

    Замена поля.

**IC_nfields**

    Определение количества полей в записи.

**IC_nocc**

    Определение количества повторений поля с заданной меткой.

**IC_fldtag**

    Определение метки поля с заданным порядковым номером.

**IC_fldempty**

    Опустошение записи (локально).

**IC_changemfn**

    Изменение MFN записи (локально).

**IC_recdel**

    Установка признака логически удаленной записи (локально).

**IC_recundel**

    Снятие признака логически удаленной записи (локально).

**IC_recunlock**

    Снятие признака блокировки записи (локально).

**IC_getmfn**

    Чтение MFN записи.

**IC_recdummy**

    Создание пустую запись (локально).

**IC_isactualized**

    Чтение в статусе записи признака актуализации.

**IC_islocked**

    Чтение в статусе записи признака блокировки.

**IC_isdeleted**

    Чтение в статусе записи признака логического удаления.

Функции для работы со словарем базы данных
==========================================

**IC_nexttrm**

    Получение списка терминов словаря, начиная с заданного.

**IC_nexttrmgroup**

    Получение списка терминов словаря, начиная с заданного, и расформатирование записи, соответствующей первой ссылке каждого термина.

**IC_prevtrm**

    Получение списка терминов словаря, начиная с заданного, в обратном порядке.

**IC_prevtrmgroup**

    Получение списка терминов словаря, начиная с заданного, в обратном порядке и расформатирование записи, соответствующей первой ссылке каждого термина.

**IC_posting**

    Получение списка ссылок для заданного термина.

**IC_postinggroup**

    Получение списка первых ссылок для списка заданных терминов.

**IC_postingformat**

    Получение списка ссылок для заданного термина и расформатирование записей им соответствующих.

Функции поиска
==============

**IC_search**

    Прямой (по словарю) поиск записей по заданному поисковому выражению.

**IC_searchscan**

    Последовательный поиск по результату прямого поиска и/или по заданному диапазону записей.

Функции форматирования
======================

**IC_sformat**

    Расформатирование записи, заданной по номеру (mfn).

**IC_record_sformat**

    Расформатирование записи в клиентском представлении.

**IC_sformatgroup**

    Расформатирование группы записей.

Функции пакетной обработки
==========================

**IC_print**

    Формирование выходной табличной формы.

**IC_stat**

    Формирование выходной формы в виде статистических распределений.

**IC_gbl**

    Выполнение задания на глобальную корректировку.

Функции администратора
======================

**IC_adm_restartserver**

     Перезапуск сервера ИРБИС64.

**IC_adm_getdeletedlist**

    Получение списка удаленных документов.

**IC_adm_getalldeletedlists**

    Получение общих сведений о базе данных: списки удаленных/заблокированных/неактуализированных записей, максимальный MFN и признак монопольной блокировки базы.

**IC_adm_dbempty**

    Опустошение базы данных.

**IC_adm_dbdelete**

    Удаление базы данных.

**IC_adm_newdb**

    Создание новой базы данных электронного каталога.

**IC_adm_dbunlock**

    Снятие монопольной блокировки базы данных.

**IC_adm_dbunlockmfn**

    Снятие блокировки заданных записей.

**IC_adm_dbstartcreatedictionry**

    Создание словаря базы данных заново.

**IC_adm_dbstartreorgdictionry**

    Реорганизация словаря базы данных.

**IC_adm_dbstartreorgmaster**

    Реорганизация файла документов базы данных.

**IC_adm_getclientlist**

    Получение списка зарегистрированных (текущих) клиентов.

**IC_adm_getclientslist**

    Получение списка клиентов для доступа к серверу.

**IC_adm_getprocesslist**

    Получение списка запущенных процессов на сервере.

**IC_adm_setclientslist**

    Обновление списка клиентов для доступа к серверу.

Вспомогательные функции
=======================

**IC_nooperation() -> c_int**

    Подтверждение регистрации.

**IC_getposting(c_char_p, c_int) -> c_int**

    Получить элемент исходной ссылки.

**IC_reset_delim(c_char_p) -> c_char_p**

    Заменить реальные разделители строк $0D0A на псевдоразделители $3130.

**IC_delim_reset(c_char_p) -> c_char_p**

    Заменить псевдоразделители $3130 на реальные разделители строк $0D0A.
